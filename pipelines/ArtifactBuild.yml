trigger:
    branches:
        include:
            - master
    tags:
        include:
            - v*
    paths:
        exclude:
            - /*
pool:
    vmImage: "ubuntu-latest"

stages:
    - stage: Build_Frontend_App
      displayName: "Build Frontend App"
      jobs:
          - job: "Deploy_Fusion_BMT"
            steps:
                - task: UseDotNet@2
                  displayName: "Install Dotnet"
                  inputs:
                      packageType: "sdk"
                      version: "5.0.x"

                - task: DotNetCoreCLI@2
                  displayName: Install dotnet-ef
                  inputs:
                      command: "custom"
                      custom: "tool"
                      arguments: "install --global dotnet-ef"
                - task: NodeTool@0
                  inputs:
                      versionSpec: "16.x"
                - task: Npm@1
                  displayName: "Install frontend"
                  inputs:
                      command: "install"
                      workingDir: "frontend"
                - task: Npm@1
                  displayName: "Bundle frontend"
                  inputs:
                      command: "custom"
                      workingDir: "frontend"
                      customCommand: "run-script build"
                - task: PublishPipelineArtifact@1
                  inputs:
                      targetPath: "$(Pipeline.Workspace)/s/frontend/out/bmt.zip"
                      artifactName: FusionBMT

    - stage: Build_Backend_Container
      displayName: "Build Backend"
      dependsOn: []
      jobs:
          - job: "BuildimageandpushtoACR"
            steps:
                - script: |
                      docker login -u $(dt_tenant) $(dt_url) --password $(dt_password)
                  displayName: "docker login dynatrace"
                - script: |
                      docker build -f $(Build.SourcesDirectory)/backend/dynatrace.Dockerfile \
                      --build-arg dt_url=$(dt_url) \
                      --build-arg dt_tenant=$(dt_tenant) \
                      $(Build.SourcesDirectory)/backend/ \
                      -t fusionbmt.azurecr.io/backend:release \
                      -t fusionbmt.azurecr.io/backend:$(Build.BuildId)
                  displayName: "docker build with OneAgent"

                - task: Docker@2
                  displayName: "Push container to ACR"
                  inputs:
                      containerRegistry: "BMT Registry"
                      repository: "backend"
                      command: "push"
                      tags: $(Build.BuildId)

    - stage: Build_Frontend_Container
      displayName: "Build frondendcontainer with OneAgent"
      dependsOn: []
      jobs:
          - job: "BuildimageandpushtoACR"
            steps:
                - script: |
                      docker login -u $(dt_tenant) $(dt_url) --password $(dt_password)
                  displayName: "docker login dynatrace"

                - task: Bash@3
                  displayName: "docker build with OneAgent"
                  inputs:
                      targetType: "inline"
                      script: |
                          docker build -f $(Build.SourcesDirectory)/frontend/dynatrace.Dockerfile \
                          --build-arg dt_url=$(dt_url) \
                          --build-arg dt_tenant=$(dt_tenant) \
                          $(Build.SourcesDirectory)/frontend/ \
                          -t fusionbmt.azurecr.io/frontend:release \
                          -t fusionbmt.azurecr.io/frontend:$(Build.BuildId)
                      workingDirectory: "$(Build.SourcesDirectory)/frontend/"
                - task: Docker@2
                  displayName: "Push container to ACR"
                  inputs:
                      containerRegistry: "BMT Registry"
                      repository: "frontend"
                      command: "push"
                      tags: |
                          $(Build.BuildId)
                          release

    - stage: Deploy_Frontend_CI
      dependsOn: # this stage runs after buildfrontend and buildbackend
          - Build_Frontend_App
          - Build_Backend_Container
          - Build_Frontend_Container
      displayName: "Deploy CI Frontend"
      jobs:
          - deployment: "Deploy_CI_Frontend_App"
            environment: CI
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: DownloadPipelineArtifact@2
                              inputs:
                                  artifact: FusionBMT
                            - task: FusionApp@2
                              displayName: "Deploy frontend"
                              inputs:
                                  fusionCredentials: "Fusion BMT"
                                  portalUrl: "https://pro-s-portal-ci.azurewebsites.net"
                                  action: "Deploy"
                                  appKey: "bmt"
                                  bundlePath: "$(Agent.BuildDirectory)/bmt.zip"
                                  tokenResource: "$(tokenResource)"
                                  ignoreVersionConflict: true
                                  forceReplaceExisting: true

                            - task: FusionApp@2
                              displayName: "Publish frontend"
                              inputs:
                                  fusionCredentials: "Fusion BMT"
                                  portalUrl: "https://pro-s-portal-ci.azurewebsites.net"
                                  action: "Publish"
                                  appKey: "bmt"
                                  tokenResource: "$(tokenResource)"
                                  forceReplaceExisting: true
          - deployment: "Update_CI_Tags_Frontend"
            environment: CI
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: Docker@2
                              inputs:
                                  containerRegistry: "BMT Registry"
                                  command: "login"
                            - task: PowerShell@2
                              inputs:
                                  targetType: "inline"
                                  script: |
                                      $sourceImage= "fusionbmt.azurecr.io/frontend:" +$(Build.BuildId)
                                      $newtag= "fusionbmt.azurecr.io/frontend:ci-release"
                                      docker pull $sourceImage
                                      docker tag $sourceImage $newtag
                                      docker push $newtag

    - stage: Deploy_Backend_CI
      dependsOn: # this stage runs after buildfrontend and buildbackend
          - Build_Frontend_App
          - Build_Backend_Container
          - Build_Frontend_Container
      displayName: "Deploy CI Backend"
      jobs:
          - deployment: "Update_CI_Tags_Backend"
            environment: CI
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: Docker@2
                              inputs:
                                  containerRegistry: "BMT Registry"
                                  command: "login"
                            - task: PowerShell@2
                              inputs:
                                  targetType: "inline"
                                  script: |
                                      $sourceImage= "fusionbmt.azurecr.io/backend:" +$(Build.BuildId)
                                      $newtag= "fusionbmt.azurecr.io/backend:ci-release"
                                      docker pull $sourceImage
                                      docker tag $sourceImage $newtag
                                      docker push $newtag
          - job: Trigger_Radix_CI_Deploy
            displayName: Trigger Radix CI Deploy
            dependsOn: Update_CI_Tags_Backend
            pool: server
            steps:
                - task: InvokeRESTAPI@1
                  inputs:
                      connectionType: "connectedServiceName"
                      serviceConnection: "radix"
                      method: "POST"
                      headers: |
                          {
                          "Content-Type":"application/json",
                          "Authorization": "Bearer $(RadixToken)"
                          }
                      body: '{"toEnvironment": "dev",  "triggeredBy": "$(Build.BuildId)"}'
                      urlSuffix: "api/v1/applications/fusion-bmt/pipelines/build-deploy"
                      waitForCompletion: "false"
                      successCriteria: eq(root['status'], 'Waiting')

    - stage: Deploy_Frontend_QA
      dependsOn: # this stage runs after buildfrontend and buildbackend
          - Deploy_Frontend_CI
          - Deploy_Backend_CI
      displayName: "Deploy Frontend QA"
      jobs:
          - deployment: "DeployQAFrontend"
            environment: QA
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: DownloadPipelineArtifact@2
                              inputs:
                                  artifact: FusionBMT
                            - task: FusionApp@2
                              displayName: "Deploy frontend"
                              inputs:
                                  fusionCredentials: "Fusion BMT"
                                  portalUrl: "https://pro-s-portal-fqa.azurewebsites.net/"
                                  action: "Deploy"
                                  appKey: "bmt"
                                  bundlePath: "$(Agent.BuildDirectory)/bmt.zip"
                                  tokenResource: "$(tokenResource)"
                                  ignoreVersionConflict: true
                                  forceReplaceExisting: true

                            - task: FusionApp@2
                              displayName: "Publish frontend"
                              inputs:
                                  fusionCredentials: "Fusion BMT"
                                  portalUrl: "https://pro-s-portal-fqa.azurewebsites.net/"
                                  action: "Publish"
                                  appKey: "bmt"
                                  tokenResource: "$(tokenResource)"
                                  forceReplaceExisting: true

          - deployment: "Update_QA_Tags_Frontend"
            environment: QA
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: Docker@2
                              inputs:
                                  containerRegistry: "BMT Registry"
                                  command: "login"
                            - task: PowerShell@2
                              inputs:
                                  targetType: "inline"
                                  script: |
                                      $sourceImage= "fusionbmt.azurecr.io/frontend:" +$(Build.BuildId)
                                      $newtag= "fusionbmt.azurecr.io/frontend:qa-release"
                                      docker pull $sourceImage
                                      docker tag $sourceImage $newtag
                                      docker push $newtag

    - stage: Deploy_Backend_QA
      dependsOn: # this stage runs after buildfrontend and buildbackend
          - Deploy_Frontend_CI
          - Deploy_Backend_CI
      displayName: "Deploy Backend QA"
      jobs:
          - deployment: "Update_QA_Tags_Backend"
            environment: QA
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: Docker@2
                              inputs:
                                  containerRegistry: "BMT Registry"
                                  command: "login"
                            - task: PowerShell@2
                              inputs:
                                  targetType: "inline"
                                  script: |
                                      $sourceImage= "fusionbmt.azurecr.io/backend:" +$(Build.BuildId)
                                      $newtag= "fusionbmt.azurecr.io/backend:qa-release"
                                      docker pull $sourceImage
                                      docker tag $sourceImage $newtag
                                      docker push $newtag
          - job: Trigger_Radix_QA_Deploy
            displayName: Trigger Radix QA Deploy
            dependsOn: Update_QA_Tags_Backend
            pool: server
            steps:
                - task: InvokeRESTAPI@1
                  inputs:
                      connectionType: "connectedServiceName"
                      serviceConnection: "radix"
                      method: "POST"
                      headers: |
                          {
                          "Content-Type":"application/json",
                          "Authorization": "Bearer $(RadixToken)"
                          }
                      body: '{"toEnvironment": "qa",  "triggeredBy": "$(Build.BuildId)"}'
                      urlSuffix: "api/v1/applications/fusion-bmt/pipelines/build-deploy"
                      waitForCompletion: "false"
                      successCriteria: eq(root['status'], 'Waiting')

    - stage: Deploy_Frontend_Prod
      dependsOn: # this stage runs after buildfrontend and buildbackend
          - Deploy_Frontend_QA
          - Deploy_Backend_QA
      displayName: "Deploy Prod Frontend"
      jobs:
          - deployment: "Deploy_Prod_Frontend"
            environment: Production
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: DownloadPipelineArtifact@2
                              inputs:
                                  artifact: FusionBMT
                            - task: FusionApp@2
                              displayName: "Deploy frontend"
                              inputs:
                                  fusionCredentials: "Fusion BMT"
                                  portalUrl: "https://pro-s-portal-fprd.azurewebsites.net"
                                  action: "Deploy"
                                  appKey: "bmt"
                                  bundlePath: "$(Agent.BuildDirectory)/bmt.zip"
                                  tokenResource: "$(tokenResource)"
                                  ignoreVersionConflict: true
                                  forceReplaceExisting: true

                            - task: FusionApp@2
                              displayName: "Publish frontend"
                              inputs:
                                  fusionCredentials: "Fusion BMT"
                                  portalUrl: "https://pro-s-portal-fprd.azurewebsites.net"
                                  action: "Publish"
                                  appKey: "bmt"
                                  tokenResource: "$(tokenResource)"
                                  forceReplaceExisting: true

          - deployment: "Update_Prod_Tags_Frontend"
            environment: Production
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: Docker@2
                              inputs:
                                  containerRegistry: "BMT Registry"
                                  command: "login"
                            - task: PowerShell@2
                              inputs:
                                  targetType: "inline"
                                  script: |
                                      $sourceImage= "fusionbmt.azurecr.io/frontend:" +$(Build.BuildId)
                                      $newtag= "fusionbmt.azurecr.io/frontend:prod-release"
                                      docker pull $sourceImage
                                      docker tag $sourceImage $newtag
                                      docker push $newtag

    - stage: Deploy_Backend_Prod
      dependsOn: # this stage runs after buildfrontend and buildbackend
          - Deploy_Frontend_QA
          - Deploy_Backend_QA
      displayName: "Deploy Prod Backend"
      jobs:
          - deployment: "Update_Prod_Tags_Backend"
            environment: Production
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: PowerShell@2
                              inputs:
                                  targetType: "inline"
                                  script: |
                                      $sourceImage= "fusionbmt.azurecr.io/backend:" +$(Build.BuildId)
                                      $newtag= "fusionbmt.azurecr.io/backend:prod-release"
                                      docker pull $sourceImage
                                      docker tag $sourceImage $newtag
                                      docker push $newtag
          - job: TriggerRadixCIDeploy
            displayName: Trigger Radix Prod Deploy
            dependsOn: Update_Prod_Tags_Backend
            pool: server
            steps:
                - task: InvokeRESTAPI@1
                  inputs:
                      connectionType: "connectedServiceName"
                      serviceConnection: "radix"
                      method: "POST"
                      headers: |
                          {
                          "Content-Type":"application/json",
                          "Authorization": "Bearer $(RadixToken)"
                          }
                      body: '{"toEnvironment": "prod",  "triggeredBy": "$(Build.BuildId)"}'
                      urlSuffix: "api/v1/applications/fusion-bmt/pipelines/build-deploy"
                      waitForCompletion: "false"
                      successCriteria: eq(root['status'], 'Waiting')
