parameters:
    - name: name # defaults for any parameters that aren't specified
    - name: radixToken
    - name: buildId
    - name: envshortname
    - name: branch

variables:
    - name: radixJobName
      value: ""

stages:
    - stage: ${{ parameters.name }}
      displayName: ${{ parameters.name }}
      dependsOn:
          - Deploy_Backend_${{ parameters.envshortname }}
          - Deploy_Frontend_${{ parameters.envshortname }}
      jobs:
          - job: Trigger_Radix_Deploy
            displayName: Trigger Radix Deploy
            steps:
                - task: PowerShell@2
                  inputs:
                      targetType: "inline"
                      script: |
                          $url = "https://api.radix.equinor.com/api/v1/applications/fusion-bmt/pipelines/build-deploy"

                          $e = @{
                              Uri     = "https://api.radix.equinor.com/api/v1/applications/fusion-bmt/pipelines/build-deploy"
                              Headers = @{"Authorization" = "Bearer ${{ parameters.radixToken }}"}
                          }

                          $body = @'
                          {"branch":"${{ parameters.branch }}",
                          "triggeredBy":"${{ parameters.buildId }}-${{ parameters.branch }}"
                          }
                          '@

                          $result = Invoke-RestMethod -Uri $url -Headers $e.Headers -Body $body -Method Post
                          $pipelineName = $result.name
                          Write-Host $pipelineName
                          Write-Host "##vso[task.setvariable variable=radixJobName;]$pipelineName"
                          Write-Host "Done"
                - task: PowerShell@2
                  inputs:
                      targetType: "inline"
                      script: |
                          $url = "https://api.radix.equinor.com/api/v1/applications/fusion-bmt/jobs/${{ parameters.radixJobName }}"

                          $e = @{
                              Uri     = "https://api.radix.equinor.com/api/v1/applications/fusion-bmt/jobs/${{ parameters.radixJobName }}"
                              Headers = @{"Authorization" = "Bearer ${{ parameters.radixToken }}"}
                          }

                          $TimeoutAfter = New-TimeSpan -Minutes 5
                          $WaitBetweenPolling = New-TimeSpan -Seconds 10

                          $Timeout = (Get-Date).Add($TimeoutAfter)
                          $stepCounter = 0
                          do
                          {
                              $result = Invoke-RestMethod -Uri $url -Headers $e.Headers 
                              $steps = $result.steps |  where { $_.status -eq "Succeeded" } 
                              if ($stepCounter -eq $steps.Length) {

                              } else {
                                  $stepCounter = $steps.Length
                                  Write-Host "Steps:" $steps.Length "of" $result.steps.length
                              }
                              
                              Start-Sleep -Seconds $WaitBetweenPolling.Seconds

                          }
                          while (($Result.status -eq "Running") -and ((Get-Date) -lt $Timeout))

                          if ($Result -eq "Succeeded")
                          {
                              Write-Host "Build-deploy Success"
                              exit 1
                          } else {
                              Write-Host "Build-deploy Non-success"
                              exit 0

                          }
