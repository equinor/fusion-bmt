trigger:
    - master
    - cypress
pr:
    - master

pool:
    vmImage: "ubuntu-latest"

name: $(Build.BuildId).$(rev:r)
jobs:
    - job: Cypress_E2E_Tests
      strategy:
          parallel: 4
      variables:
          npm_config_cache: $(Pipeline.Workspace)/.npm
      steps:
          - task: NodeTool@0
            inputs:
                versionSpec: "16.x"

          - task: Cache@2
            inputs:
                key: 'npm | "$(Agent.OS)" | frontend/package-lock.json'
                restoreKeys: |
                    npm | "$(Agent.OS)"'
                path: $(npm_config_cache)
            displayName: Cache npm
          - task: Cache@2
            inputs:
                key: 'cypress | "$(Agent.OS)" | frontend/package-lock.json'
                restoreKeys: |
                    cypress | "$(Agent.OS)"'
                path: /home/vsts/.cache/Cypress
            displayName: Cache cypress binary

          - task: DockerCompose@0
            inputs:
                dockerComposeFile: "docker-compose.cypress.yml"
                action: "Run a Docker Compose command"
                dockerComposeCommand: "up"
                arguments: "-d mock-auth"
            displayName: "Start mock auth"

          - script: |
                dotnet run --no-launch-profile &
                sleep 5
            env:
                ASPNETCORE_ENVIRONMENT: "Test"
            workingDirectory: "backend/api"
            displayName: "Start backend"

          - script: |
                npm ci
                npm start &
                sleep 5
            env:
                API_URL: "http://localhost:5000"
            workingDirectory: "frontend"
            displayName: "Start frontend"

          - script: |
                npx cypress run \
                --env FRONTEND_URL=http://localhost:3000,API_URL=http://localhost:5000,AUTH_URL=http://localhost:8080 \
                --config-file ./cypress.json \
                --record \
                --parallel --ci-build-id $BUILD_BUILDNUMBER.$(System.JobAttempt) --group "Azure CI"
            env:
                # avoid warnings about terminal
                TERM: xterm
                CYPRESS_RECORD_KEY: $(CYPRESS_RECORD_KEY)
            workingDirectory: "frontend"
            displayName: "Run Cypress"
